{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojisWeKnow","Object","keys","App","useState","meaning","setmeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","onClick","emojiClickHandler","style","fontSize","padding","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0KAGMA,EAAkB,CACtB,eAAM,gBACN,eAAM,8BACN,eAAM,kCACN,eAAM,yBACN,eAAM,aAOJC,EAAeC,OAAOC,KAAKH,GAEhB,SAASI,IACtB,IAAI,EAAwBC,mBAAS,yBAArC,mBAAKC,EAAL,KAAcC,EAAd,KAsBA,OACE,sBAAKC,UAAU,MAAf,UACE,8CACA,uBAAOA,UAAU,eAAeC,SAvBpC,SAA8BC,GAC5B,IAAIC,EAAYD,EAAME,OAAOC,WAIbC,KAHhBR,EAAUN,EAAgBW,MAIxBL,EAAU,uBAGM,KAAdK,IACFL,EAAU,yBAEZC,EAAWD,MAYT,6BAAKA,IACL,kDACCL,EAAac,KAAI,SAAUC,GAC1B,OACE,sBACEC,QAAS,kBAdnB,SAA2BD,GAEzBT,EADAD,EAAUN,EAAgBgB,IAaHE,CAAkBF,IACjCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAFxD,SAKGN,GAFIA,SC9CjB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvB,EAAD,MAEFmB,I","file":"static/js/main.b3a962f9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst emojiDictionary = {\n  \"ðŸ˜€\": \"Grinning face\",\n  \"ðŸ˜ƒ\": \"Grinning Face with Big Eyes\",\n  \"ðŸ˜„\": \"Grinning Face with Smiling Eyes\",\n  \"ðŸ˜‚\": \"Face with Tears of Joy\",\n  \"ðŸ¤“\": \"Nerd Face\"\n};\n\n/* \n  Converting keys of emojiDictionary into \n  an array. \n*/\nvar emojisWeKnow = Object.keys(emojiDictionary);\n\nexport default function App() {\n  var [meaning, setmeaning] = useState(\"Please enter an input\");\n\n  function onChangeEventHandler(event) {\n    var userInput = event.target.value;\n    meaning = emojiDictionary[userInput];\n\n    /* Condition for invalid input */\n    if (meaning === undefined) {\n      meaning = \"Sorry I dont know !\";\n    }\n    /* Condition for empty input */\n    if (userInput === \"\") {\n      meaning = \"Please enter an input\";\n    }\n    setmeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    meaning = emojiDictionary[emoji];\n    setmeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> Inside Out!</h1>\n      <input className=\"inputElement\" onChange={onChangeEventHandler}></input>\n      <h2>{meaning}</h2>\n      <h3> Emojis we know </h3>\n      {emojisWeKnow.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\n/*\n * In react instead of class\n * we use className.\n *\n * Also to update a value\n * on the Dom, we use use state.\n * UseState()\n * returns an array that consists of\n * a variable and a method .\n * useState() is used for initializing\n * the value\n *\n * Writing something in one curly braces\n * means we are writing javascript\n *\n * What is map in js?\n * map is like a for loop in js\n *\n */\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}